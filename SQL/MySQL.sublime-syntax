%YAML 1.2
---
name: MySQL
scope: source.sql.mysql
version: 2

extends: Packages/SQL/SQL (basic).sublime-syntax

variables:
  simple_types: |-
    (?xi:
      \b
      (?:bigint|bigserial|bit|bool|boolean|box|bytea|cidr|circle|date|datetime|double\s+precision|enum|inet|integer|
        line|longtext|lseg|macaddr|money|ntext|oid|path|point|polygon|real|serial|smallint|sysdate|sysname|text|tinytext
      )
      \b
    )
  types_with_optional_number: |-
    (?xi:
      \b
      (?:bit\s+varying|character\s+(?:varying)?|tinyint|var\schar|float|int|interval|numeric|decimal|times?|timestamp(?:s|tz)?)
      \b
    )

contexts:
  sql:
    - meta_append: true
    - include: regexps

###[ COMMENTS ]################################################################

  comments:
    - meta_append: true
    - match: '#'
      scope: punctuation.definition.comment.sql
      push: inside-number-sign-comment

  double-dash-comments:
    - meta_include_prototype: false
    - match: '--(?=\s)'
      scope: punctuation.definition.comment.sql
      push: inside-double-dash-comment

  inside-number-sign-comment:
    - meta_include_prototype: false
    - meta_scope: comment.line.number-sign.sql
    - match: \n
      pop: 1

###[ DDL STATEMENTS ]##########################################################

  ddl-statements:
    - meta_prepend: true
    - match: \b(?i:create\s+or\s+replace)\b
      scope: keyword.other.ddl.sql
      push:
        - ddl-create-target
        - create-condition
        - ddl-target

  ddl-alter-table:
    - meta_prepend: true
    - match: \b(?i:change\s+column)\b
      scope: keyword.other.ddl.sql
      push:
        - expect-type
        - expect-column-name-declaration
        - expect-column-name

  ddl-target:
    - meta_prepend: true
    - include: ddl-target-common

  ddl-create-target:
    - meta_prepend: true
    - include: ddl-target-common

  create-condition:
    - meta_prepend: true
    - include: ddl-target-common

  ddl-target-common:
    - match: \b(?i:on)\b
      scope: keyword.other.mysql
      push: expect-table-name
    - match: \b(?i:using)\b
      scope: keyword.other.mysql
    - match: \b(?i:(algorithm))\s*(=)
      captures:
        1: keyword.other.mysql
        2: keyword.operator.assignment.mysql
      push: ddl-target-algorithm
    - match: (?=\()
      pop: 1

  ddl-target-algorithm:
    - match: \b(?i:MERGE|TEMPTABLE|UNDEFINED)\b
      scope: keyword.other.mysql
      pop: 1
    - include: else-pop

  inside-ddl-table-creation-columns:
    - meta_prepend: true
    - match: \b(?i:auto_increment)\b
      scope: keyword.other.mysql
    - match: (?i:\s*\b(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)
      scope: keyword.other.object-comments.sql

###[ DML STATEMENTS ]##########################################################

  dml-statements:
    - meta_append: true
    - match: \b(?i:insert(\s+(?:ignore\s+)?into)?)\b
      scope: keyword.other.dml.sql
      push: expect-table-name
    - match: \b(?i:limit)\b
      scope: keyword.other.dml.sql

  joins:
    - meta_append: true
    - match: \b(?i:straight_join|natural)\b
      scope: keyword.other.dml.sql

###[ OTHER STATEMENTS ]########################################################

  other-statements:
    - meta_prepend: true
    - match: \b(?i:begin(\s+work)?|start\s+transaction|commit(\s+work)?|rollback(\s+work)?)\b
      scope: keyword.other.luw.sql

###[ EXPRESSIONS ]#############################################################

  expressions:
    - meta_prepend: true
    - match: \b(?i:CONCATENATE|CONVERT|LOWER|SUBSTRING|TRANSLATE|TRIM|UPPER)\b
      scope: support.function.string.sql
    - match: \b(?i:using)\b
      scope: keyword.other.mysql

  table-name-or-subquery:
    - meta_prepend: true
    - meta_include_prototype: false
    - match: (?=#)
      pop: 1
    - include: comments

###[ TYPES ]###################################################################

  after-type:
    - meta_prepend: true
    - match: \b(?i:unsigned)\b
      scope: storage.modifier.mysql
      pop: 1
    - match: \b(?i:with(?:out)?\s+time\s+zone)\b
      scope: storage.type.sql
      pop: 1

###[ LITERALS ]################################################################

  regexps:
    - match: /(?=\S.*/)
      scope: punctuation.definition.string.begin.sql
      push: inside-regexp

  inside-regexp:
    - meta_include_prototype: false
    - meta_scope: meta.string.regexp.sql string.regexp.sql
    - match: /
      scope: punctuation.definition.string.end.sql
      pop: 1
    - include: string-interpolations
    - match: \\/
      scope: constant.character.escape.slash.sql

  strings:
    - meta_append: true
    - include: double-quoted-strings
    - include: interpolations

  double-quoted-strings:
    - match: \"
      scope: punctuation.definition.string.begin.sql
      push: inside-double-quoted-string

  inside-double-quoted-string:
    - meta_include_prototype: false
    - meta_scope: meta.string.sql string.quoted.double.sql
    - match: \"\"
      scope: constant.character.escape.sql
    - match: \"
      scope: punctuation.definition.string.end.sql
      pop: 1
    - include: string-interpolations

  interpolations:
    - match: \%\{
      scope: punctuation.definition.string.begin.sql
      push: inside-interpolation

  inside-interpolation:
    - meta_include_prototype: false
    - meta_scope: meta.string.sql string.other.quoted.brackets.sql
    - match: \}
      scope: punctuation.definition.string.end.sql
      pop: 1
    - include: string-interpolations

  string-interpolations:
    - meta_include_prototype: false
    - match: (#\{)([^\}]*)(\})
      scope: meta.interpolation.sql
      captures:
        1: punctuation.section.interpolation.begin.sql
        3: punctuation.section.interpolation.end.sql
      push: clear-scope-imediately-pop

###[ OPERATORS ]###############################################################

  operators:
    - meta_append: true
    - match: \|\|
      scope: keyword.operator.concatenation.sql

###[ PROTOTYPES ]##############################################################

  clear-scope-imediately-pop:
    - clear_scopes: 1
    - include: immediately-pop
