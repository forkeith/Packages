%YAML 1.2
---
name: Cassandra Query Language
file_extensions:
  - cql
scope: source.sql.cql
version: 2
extends: Packages/SQL/SQL (basic).sublime-syntax

variables:
  simple_types: |-
    (?ix:\b(?:
      (ASCII|BIGINT|BLOB|BOOLEAN|COUNTER|DATE|
      DECIMAL|DOUBLE|DURATION|FLOAT|INET|INT|
      SMALLINT|TEXT|TIME|TIMESTAMP|TIMEUUID|TINYINT|
      UUID|VARCHAR|VARINT)
    )\b)
  types_with_optional_number: (?!)
  #reserved: (?:;)

contexts:
  expressions:
    - meta_append: true
    - match: \h{8}(?:-\h{4}){3}-\h{12}
      scope: constant.numeric.uuid.cql
    - match: (:)\w+
      scope: variable.other.constant.cql
      captures:
        1: punctuation.definition.variable.cql
    - match: \b(?i:limit)\b
      scope: keyword.other.dml.cql
    - match: \{
      scope: punctuation.section.braces.begin.cql
      push: inside-dict-or-set
    - match: \b((?i:with))\s+(\w+)?
      captures:
        1: keyword.other.cql
        2: string.unquoted.cql
    - match: \b(?i:primary\s+key)\b
      scope: keyword.other.cql

  dml-statements:
    - meta_append: true
    - match: \b(?i:allow filtering)\b
      scope: keyword.other.dml.cql

  types:
    - meta_prepend: true
    - match: \b(?i:set|frozen|map|tuple)(<)
      scope: storage.type.cql
      captures:
        1: punctuation.definition.generic.begin.cql
      push: generic-type

  generic-type:
    - include: types
    - match: \>
      scope: storage.type.cql punctuation.definition.generic.end.cql
      pop: 1

  ddl-target:
    - meta_prepend: true
    - match: \b(?i:keyspace)\b
      scope: keyword.other.cql
    - match: \b(?i:materialized)\b
      scope: keyword.other.cql

  inside-dict-or-set:
    - match: \}
      scope: punctuation.section.braces.end.cql
      pop: 1
    - match: ':'
      scope: punctuation.separator.mapping.key-value.cql
    - include: expressions
    - match: \w+
      scope: meta.mapping.key.cql string.unquoted.cql

  ddl-create-target:
    - meta_prepend: true
    - match: \b(?i:with)\b
      scope: keyword.other.cql
    - match: \b(?i:clustering)\b
      scope: keyword.other.cql

  ddl-alter-common:
    - meta_prepend: false

  inside-ddl-table-creation-columns:
    - meta_scope: meta.group.table-columns.sql
    - match: \)
      scope: punctuation.section.group.end.sql
      pop: 1
    - match: ((?i:\bprimary\s+key))\s*(\()
      captures:
        1: keyword.other.cql
        2: meta.group.cql punctuation.section.group.begin.cql
      push: partition-key
    - match: \b(?i:primary\s+key)\b
      scope: storage.modifier.cql
      push: partition-key
    - include: expressions-or-column-name

  partition-key:
    - meta_content_scope: meta.group.partition-key.cql
    - match: \)
      scope: meta.group.partition-key.cql punctuation.section.group.end.cql
      pop: 1
    - match: \(
      scope: punctuation.section.group.begin.cql
      push: inside-partition-key-group
    - match: ','
      scope: punctuation.separator.sequence.cql
      set: inside-group
    - include: inside-ddl-table-creation-columns

  inside-partition-key-group:
    - match: \)
      scope: punctuation.section.group.end.cql
      pop: 1
    - include: inside-ddl-table-creation-columns

  joins:
    - match: \bjoin\b
