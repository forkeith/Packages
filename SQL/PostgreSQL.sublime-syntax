%YAML 1.2
---
name: PostgreSQL
scope: source.sql.psql
version: 2
extends: Packages/SQL/MySQL.sublime-syntax

file_extensions:
  - psql

variables:
  simple_types: |-
    (?xi:
      \b
      (?:smallint|integer|bigint|real|double\s+precision|smallserial|serial|bigserial|
        money|
        bytea|
        times?|timestamp(?:s|tz)?|date|interval|
        int4range|int8range|numrange|tsrange|tstzrange|daterange|
        boolean|
        point|line|lseg|box|path|polygon|circle|
        cidr|inet|macaddr|macaddr8|
        tsvector|tsquery|
        uuid|
        xml|jsonb?|text)
      \b
    )
  types_with_optional_number: |-
    (?xi:
      \b
      (?:decimal|numeric|
        character\s+varying|varchar|character|char|
        bit|bit\s+varying)
      \b
    )

contexts:
  expressions:
    - meta_prepend: true
    - match: \b(?i:ARRAY)\b
      scope: keyword.declaration.psql
    - match: \[
      scope: punctuation.section.brackets.begin.psql
    - match: \]
      scope: punctuation.section.brackets.end.psql
    - match: ':(?!:)'
      scope: keyword.operator.range.psql
    - match: \b(?i:return)\b
      scope: keyword.control.flow.return.psql

  ddl-target:
    - meta_prepend: true
    - match: \b(?i:extension|domain)\b
      scope: keyword.other.psql

  ddl-create-target:
    - meta_prepend: true
    - match: \b(?i:after(?:\s+(?:insert|update|or))+)\b
      scope: keyword.other.psql

  ddl-alter-common:
    - meta_prepend: true
    - match: \b(?i:check)\b
      scope: keyword.other.psql

  operators:
    - meta_prepend: true
    - match: '::'
      scope: keyword.operator.cast.psql
      push: expect-type
    - include: regex-operators

  regex-operators:
    # https://www.postgresql.org/docs/7.4/functions-matching.html#FUNCTIONS-POSIX-REGEXP
    - match: '!?~\*?'
      scope: keyword.operator.comparison.psql
      push: expect-regex

  inside-ddl-table-creation-columns:
    - meta_prepend: true
    - match: \b(?i:unique)\b
      scope: keyword.other.psql

  expect-regex:
    - match: \'
      scope: punctuation.definition.string.begin.sql
      embed: single-quoted-regex
      embed_scope: source.regexp
      escape: \'
      escape_captures:
        0: meta.string.regexp.psql punctuation.definition.string.end.sql
      pop: 1
    - include: else-pop

  single-quoted-regex:
    - meta_scope: meta.string.regexp.psql
    - include: scope:source.regexp

  statements:
    - meta_prepend: true
    - include: declarations

  after-declare:
    - match: ''
      set:
        - expect-type
        - declaration-variable-name
        - single-identifier

  declaration-variable-name:
    - meta_include_prototype: false
    - meta_scope: variable.other.psql
    - include: immediately-pop

  ddl-statements:
    - meta_prepend: true
    - match: \$\$

  ddl-create-target-expect-as:
    - meta_prepend: true
    - match: \b(?i:FOR\s+EACH\s+ROW\s+EXECUTE\s+PROCEDURE)\b
      scope: keyword.other.psql
    - match: \b(?i:schema)\b
      scope: storage.modifier.psql
      push:
        - schema-name
        - single-identifier-after-whitespace
